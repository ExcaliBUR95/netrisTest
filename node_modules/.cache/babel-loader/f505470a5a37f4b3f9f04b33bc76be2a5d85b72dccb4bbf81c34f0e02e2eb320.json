{"ast":null,"code":"var _jsxFileName = \"/Users/alihanelderhanov/Desktop/testSkill/call-listing/src/components/EventList/ui/EventList.tsx\";\nimport React from 'react';\nimport EventItem from '../../EventItem/ui/EventItem';\nimport styles from './EventList.module.css'; // Импортируем стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventList = _ref => {\n  let {\n    events,\n    onEventClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.eventListContainer,\n    children: [\" \", events.map((event, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.eventItem,\n      children: [\" \", /*#__PURE__*/_jsxDEV(EventItem, {\n        timestamp: event.timestamp,\n        onClick: onEventClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","EventItem","styles","jsxDEV","_jsxDEV","EventList","_ref","events","onEventClick","className","eventListContainer","children","map","event","index","eventItem","timestamp","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alihanelderhanov/Desktop/testSkill/call-listing/src/components/EventList/ui/EventList.tsx"],"sourcesContent":["import React from 'react';\nimport EventItem from '../../EventItem/ui/EventItem';\nimport styles from './EventList.module.css'; // Импортируем стили\n\ninterface Event {\n  timestamp: number;\n}\n\ninterface EventListProps {\n  events: Event[];\n  onEventClick: (timestamp: number) => void; // Добавляем свойство onEventClick\n}\n\nconst EventList: React.FC<EventListProps> = ({ events, onEventClick }) => {\n  return (\n    <div className={styles.eventListContainer}> {/* Используем класс из CSS-модулей */}\n      {events.map((event, index) => (\n        <button key={index} className={styles.eventItem}> {/* Используем класс из CSS-модулей */}\n          <EventItem timestamp={event.timestamp} onClick={onEventClick} />\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default EventList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,MAAM,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAW7C,MAAMC,SAAmC,GAAGC,IAAA,IAA8B;EAAA,IAA7B;IAAEC,MAAM;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACnE,oBACEF,OAAA;IAAKK,SAAS,EAAEP,MAAM,CAACQ,kBAAmB;IAAAC,QAAA,GAAC,GAAC,EACzCJ,MAAM,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBV,OAAA;MAAoBK,SAAS,EAAEP,MAAM,CAACa,SAAU;MAAAJ,QAAA,GAAC,GAAC,eAChDP,OAAA,CAACH,SAAS;QAACe,SAAS,EAAEH,KAAK,CAACG,SAAU;QAACC,OAAO,EAAET;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GADrDP,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAVIjB,SAAmC;AAYzC,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}