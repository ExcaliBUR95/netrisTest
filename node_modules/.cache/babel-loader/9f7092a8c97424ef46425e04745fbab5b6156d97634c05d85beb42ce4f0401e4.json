{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  events: [],\n  isLoading: false\n};\nconst videoSlice = createSlice({\n  name: 'video',\n  initialState,\n  reducers: {\n    setEvents: (state, action) => {\n      state.events = action.payload;\n      state.isLoading = false;\n    },\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    }\n  }\n});\nexport const {\n  setEvents\n} = videoSlice.actions;\nexport default videoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","events","isLoading","videoSlice","name","reducers","setEvents","state","action","payload","setLoading","actions","reducer"],"sources":["/Users/alihanelderhanov/Desktop/testSkill/call-listing/src/redux/action/videoPlayerSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface Event {\n  timestamp: number;\n  endTime: number;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\ninterface VideoState {\n  events: Event[];\n  isLoading: boolean;\n}\n\nconst initialState: VideoState = {\n  events: [],\n  isLoading: false\n};\n\nconst videoSlice = createSlice({\n  name: 'video',\n  initialState,\n  reducers: {\n    setEvents: (state, action: PayloadAction<Event[]>) => {\n      state.events = action.payload;\n      state.isLoading = false;  \n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload; \n    },\n  },\n});\n\nexport const { setEvents } = videoSlice.actions;\nexport default videoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAgB7D,MAAMC,YAAwB,GAAG;EAC/BC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACpDD,KAAK,CAACN,MAAM,GAAGO,MAAM,CAACC,OAAO;MAC7BF,KAAK,CAACL,SAAS,GAAG,KAAK;IACzB,CAAC;IACDQ,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAU,CAAC,GAAGH,UAAU,CAACQ,OAAO;AAC/C,eAAeR,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}