{"ast":null,"code":"var _jsxFileName = \"/Users/alihanelderhanov/Desktop/testSkill/call-listing/src/components/EventList/ui/EventList.tsx\";\nimport React from 'react';\nimport { render, fireEvent, screen } from '@testing-library/react';\nimport EventList from './EventList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndescribe('EventList', () => {\n  const events = [{\n    timestamp: 0\n  }, {\n    timestamp: 100\n  }, {\n    timestamp: 200\n  }];\n  it('отображает список событий и обрабатывает клики', () => {\n    const onEventClick = jest.fn();\n    render( /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      onEventClick: onEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this));\n    events.forEach(event => {\n      const eventButton = screen.getByTestId(`event-item-${event.timestamp}`);\n      fireEvent.click(eventButton);\n      expect(onEventClick).toHaveBeenCalledWith(event.timestamp);\n    });\n  });\n  it('корректно отображает количество событий', () => {\n    render( /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      onEventClick: jest.fn()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this));\n    const eventItems = screen.getAllByTestId(/^event-item-/);\n    expect(eventItems.length).toBe(events.length);\n  });\n});","map":{"version":3,"names":["React","render","fireEvent","screen","EventList","jsxDEV","_jsxDEV","describe","events","timestamp","it","onEventClick","jest","fn","fileName","_jsxFileName","lineNumber","columnNumber","forEach","event","eventButton","getByTestId","click","expect","toHaveBeenCalledWith","eventItems","getAllByTestId","length","toBe"],"sources":["/Users/alihanelderhanov/Desktop/testSkill/call-listing/src/components/EventList/ui/EventList.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, screen } from '@testing-library/react';\nimport EventList from './EventList';\n\ndescribe('EventList', () => {\n  const events = [\n    { timestamp: 0 },\n    { timestamp: 100 },\n    { timestamp: 200 },\n  ];\n\n  it('отображает список событий и обрабатывает клики', () => {\n    const onEventClick = jest.fn();\n    render(<EventList events={events} onEventClick={onEventClick} />);\n  \n    events.forEach((event) => {\n      const eventButton = screen.getByTestId(`event-item-${event.timestamp}`);\n      fireEvent.click(eventButton);\n      expect(onEventClick).toHaveBeenCalledWith(event.timestamp);\n    });\n  });\n  \n  it('корректно отображает количество событий', () => {\n    render(<EventList events={events} onEventClick={jest.fn()} />);\n    const eventItems = screen.getAllByTestId(/^event-item-/);\n    expect(eventItems.length).toBe(events.length);\n  });\n  \n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAClE,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpCC,QAAQ,CAAC,WAAW,EAAE,MAAM;EAC1B,MAAMC,MAAM,GAAG,CACb;IAAEC,SAAS,EAAE;EAAE,CAAC,EAChB;IAAEA,SAAS,EAAE;EAAI,CAAC,EAClB;IAAEA,SAAS,EAAE;EAAI,CAAC,CACnB;EAEDC,EAAE,CAAC,gDAAgD,EAAE,MAAM;IACzD,MAAMC,YAAY,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;IAC9BZ,MAAM,eAACK,OAAA,CAACF,SAAS;MAACI,MAAM,EAAEA,MAAO;MAACG,YAAY,EAAEA;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAEjET,MAAM,CAACU,OAAO,CAAEC,KAAK,IAAK;MACxB,MAAMC,WAAW,GAAGjB,MAAM,CAACkB,WAAW,CAAE,cAAaF,KAAK,CAACV,SAAU,EAAC,CAAC;MACvEP,SAAS,CAACoB,KAAK,CAACF,WAAW,CAAC;MAC5BG,MAAM,CAACZ,YAAY,CAAC,CAACa,oBAAoB,CAACL,KAAK,CAACV,SAAS,CAAC;IAC5D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFC,EAAE,CAAC,yCAAyC,EAAE,MAAM;IAClDT,MAAM,eAACK,OAAA,CAACF,SAAS;MAACI,MAAM,EAAEA,MAAO;MAACG,YAAY,EAAEC,IAAI,CAACC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAC9D,MAAMQ,UAAU,GAAGtB,MAAM,CAACuB,cAAc,CAAC,cAAc,CAAC;IACxDH,MAAM,CAACE,UAAU,CAACE,MAAM,CAAC,CAACC,IAAI,CAACpB,MAAM,CAACmB,MAAM,CAAC;EAC/C,CAAC,CAAC;AAEJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}